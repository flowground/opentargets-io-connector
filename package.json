{
    "name": "opentargets-io-connector",
    "version": "3.0.2",
    "description": "### The Open Targets Platform REST API\n\nThe Open Targets Platform API ('Application Programming Interface')\nallows programmatic retrieval of our data via a set of\n[REST](https://en.wikipedia.org/wiki/Representational_state_transfer)\nservices.\n\nYou can make calls to the latest version of our API using the base URL\n`https://api.opentargets.io/v3/platform`. Please make sure you use `https`\ninstead of the unencrypted `http` calls, which we do not accept.\n\nContinue reading below or [try query in the interactive interface](https://api.opentargets.io/v3/platform/docs/swagger-ui)\n\nNote that we only serve the latest version of the API. If you are interested in querying an\nold version, please [get in touch](mailto:support@targetvalidation.org) so that\nwe can help.\n\nWe list below the methods available for you to query our data directly from the API. These methods will be\nautomatically generated from our Swagger UI. For every request you create, the interface will display a [curl](https://curl.haxx.se/) command\nthat you can copy and paste directly to a shell to obtain the same results without using an internet browser.\n\nCheck our [API blog posts](https://blog.opentargets.org/tag/api), for tutorials and additional\ninformation on how to access of our data programmatically.\n\n### Available Methods\n\nThe available methods can be grouped in four types:\n\n* __public__ - Methods that serve the core set of our data. These are stable and we fully supported them.\n* __private__ - Methods used by the web app to serve additional data not specific to our platform. These methods\nmay change without notice and should be used with caution.\n* __utils__ - Methods to get statistics and technical data about our API.\n\n### Supported formats\n\nThe four methods above are all available via a `GET` request, and will serve outputs as `JSON`.\nAlternative output formats such `xml`, `csv` and `tab` are also available for some of the methods.\nPlease note that alternative output formats are not supported in this interactive page. The response here will always be in `json` format.\n\nIf you have complex queries with large number of parameters, you should\nuse a `POST` request instead of  `GET`. `POST` methods require a body encoded as `json`.\nWhen querying for a specific disease using the latest version of the API, your call would look like the example below:\n\n```sh\ncurl -X POST -d '{\"disease\":[\"EFO_0000253\"]}' --header 'Content-Type: application/json' https://api.opentargets.io/v3/platform/public/evidence/filter\n```\n### How to interpret a response\n\nEach HTTP response will serve data in headers and body.\nThe headers will give you details about your query, such as how long it took to run, and how much usage you have left (See the 'Fair Usage\nand API keys' section below for more details).\n\nIn the body of the response, you will find the data you have requested for in a `json` format. The\n[jq](https://stedolan.github.io/jq/) program is a useful tool to parse the json response while on the command line.\n\n```sh\ncurl https://api.opentargets.io/v3/platform/public/association/filter\\?target\\=ENSG00000157764 | jq\n```\n\nWe do not analyse the nature of any specific API queries except for the purposes of improving the performance of our API.\nRead more in our [privacy section](https://www.targetvalidation.org/terms_of_use#privacy).\n\nHow can we make the Open Targets Platform API more useful to you? Would you like additional methods to be implemented?\nPlease [get in touch](mailto:support@targetvalidation.org) and send your suggestions.\n\n### More examples\nCheck our [Getting started tutorial](https://blog.opentargets.org/api-getting-started-1) for more\nexamples on how to use the API and for some code snippets, which can be used to construct more complex queries.\n",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}